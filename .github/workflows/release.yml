name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'  # Déclenche sur les tags comme v1.0.0, v1.2.3, etc.

jobs:
  # ========== BUILD ANDROID ==========
  build-android:
    name: Build Android APK
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.0'
          channel: 'stable'

      - name: Get dependencies
        run: flutter pub get

      - name: Build APK
        run: flutter build apk --release

      - name: List APK files (debug)
        run: |
          echo "Listing APK directory:"
          ls -la build/app/outputs/flutter-apk/ || echo "Directory not found"
          ls -la build/app/outputs/apk/release/ || echo "Alternative directory not found"

      - name: Rename APK
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          # Try both possible locations
          if [ -f "build/app/outputs/flutter-apk/app-release.apk" ]; then
            mv build/app/outputs/flutter-apk/app-release.apk build/app/outputs/flutter-apk/Jellyfish-${VERSION}.apk
          elif [ -f "build/app/outputs/apk/release/app-release.apk" ]; then
            mkdir -p build/app/outputs/flutter-apk
            mv build/app/outputs/apk/release/app-release.apk build/app/outputs/flutter-apk/Jellyfish-${VERSION}.apk
          else
            echo "APK not found in expected locations!"
            exit 1
          fi

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: build/app/outputs/flutter-apk/Jellyfish-*.apk

  # ========== BUILD WINDOWS ==========
  build-windows:
    name: Build Windows Installer
    runs-on: windows-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.0'
          channel: 'stable'

      - name: Get dependencies
        run: flutter pub get

      - name: Build Windows
        run: flutter build windows --release

      - name: Setup Inno Setup
        run: |
          choco install innosetup -y

      - name: Update version in installer script
        shell: pwsh
        run: |
          $version = "${{ github.ref_name }}".TrimStart('v')
          (Get-Content windows/installer.iss) -replace '#define MyAppVersion ".*"', "#define MyAppVersion `"$version`"" | Set-Content windows/installer.iss

      - name: List build directory (debug)
        shell: pwsh
        run: |
          Write-Host "Listing build directory:"
          Get-ChildItem -Path build\windows -Recurse -ErrorAction SilentlyContinue

      - name: Build Installer
        shell: pwsh
        run: |
          & "C:\Program Files (x86)\Inno Setup 6\ISCC.exe" windows\installer.iss

      - name: List installer output (debug)
        shell: pwsh
        run: |
          Write-Host "Listing installer output:"
          Get-ChildItem -Path build\windows\installer -ErrorAction SilentlyContinue

      - name: Rename Installer
        shell: pwsh
        run: |
          $version = "${{ github.ref_name }}".TrimStart('v')
          $installerFiles = Get-ChildItem -Path "build\windows\installer\JellyfishSetup-*.exe"
          if ($installerFiles) {
            Move-Item $installerFiles[0].FullName "build\windows\installer\JellyfishSetup-$version.exe" -Force
          } else {
            Write-Error "Installer not found!"
            exit 1
          }

      - name: Upload Installer artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-installer
          path: build/windows/installer/JellyfishSetup-*.exe

  # ========== CREATE RELEASE ==========
  create-release:
    name: Create GitHub Release
    needs: [build-android, build-windows]
    runs-on: ubuntu-latest
    environment: jellyfish
    permissions:
      contents: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Android APK
        uses: actions/download-artifact@v4
        with:
          name: android-apk
          path: ./artifacts

      - name: Download Windows Installer
        uses: actions/download-artifact@v4
        with:
          name: windows-installer
          path: ./artifacts

      - name: List downloaded artifacts (debug)
        run: |
          echo "Listing artifacts directory:"
          ls -la ./artifacts/

      - name: Extract version
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: Jellyfish v${{ steps.version.outputs.VERSION }}
          body: |
            ## 🎉 Jellyfish v${{ steps.version.outputs.VERSION }}

            ### 📥 Téléchargements

            - **Android**: `Jellyfish-${{ steps.version.outputs.VERSION }}.apk`
            - **Windows**: `JellyfishSetup-${{ steps.version.outputs.VERSION }}.exe`

            ### 📝 Notes de version

            <!-- Ajoutez vos notes de version ici -->

            ### 🔄 Mise à jour

            L'application vérifie automatiquement les mises à jour au démarrage.
            Vous pouvez aussi vérifier manuellement dans **Paramètres > Mises à jour**.

            ---

            **Installation Android** : Téléchargez l'APK et installez-le. Vous devrez peut-être autoriser l'installation depuis des sources inconnues.

            **Installation Windows** : Téléchargez et exécutez l'installateur. L'ancienne version sera automatiquement désinstallée.
          files: |
            ./artifacts/Jellyfish-*.apk
            ./artifacts/JellyfishSetup-*.exe
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Notify Discord
        uses: sarisia/actions-status-discord@v1
        if: success()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          nodetail: true
          title: "Une nouvelle version de Jellyfish est disponible 🎉"
          description: |
            Version `v${{ steps.version.outputs.VERSION }}` publiée.

            - 📥 Téléchargements: Android (APK) et Windows (Installateur)
            - 📝 Notes de version: disponibles sur la page de release
            - 🔄 Mise à jour manuelle: ouvrez Paramètres → Mises à jour puis appuyez sur « Mettre à jour ».

            Lien direct: [Ouvrir la release](https://github.com/${{ github.repository }}/releases/tag/v${{ steps.version.outputs.VERSION }})
          color: 0x00A4DC

