# Alternative Dockerfile pour cross-compiler Flutter vers Windows depuis Linux
# Cette approche utilise une image Linux avec les outils de cross-compilation

FROM ubuntu:22.04

# Éviter les prompts interactifs
ENV DEBIAN_FRONTEND=noninteractive

# Installer les dépendances de base
RUN apt-get update && apt-get install -y \
    curl \
    git \
    unzip \
    xz-utils \
    zip \
    libglu1-mesa \
    wget \
    mingw-w64 \
    && rm -rf /var/lib/apt/lists/*

# Installer Flutter 3.35.4
ENV FLUTTER_HOME="/opt/flutter"
ENV FLUTTER_VERSION="3.35.4"
ENV PATH="$FLUTTER_HOME/bin:$PATH"

RUN git clone https://github.com/flutter/flutter.git -b stable $FLUTTER_HOME && \
    cd $FLUTTER_HOME && \
    git checkout $FLUTTER_VERSION && \
    flutter doctor

# Configurer Flutter pour Windows
RUN flutter config --enable-windows-desktop

# Créer le répertoire de travail
WORKDIR /app

# Copier les fichiers du projet
COPY pubspec.yaml pubspec.lock ./
RUN flutter pub get

COPY . .

# Script de build
RUN echo '#!/bin/bash\n\
set -e\n\
echo "🔨 Building Flutter app for Windows..."\n\
flutter clean\n\
flutter pub get\n\
flutter packages pub run build_runner build --delete-conflicting-outputs || true\n\
echo "⚠️  Note: Cross-compilation to Windows from Linux is experimental"\n\
echo "⚠️  This will create a Linux build. For true Windows builds, use GitHub Actions."\n\
flutter build linux --release\n\
echo "✅ Build completed!"\n\
echo "📁 Results are in build/linux/x64/release/bundle/"\n\
' > /build.sh && chmod +x /build.sh

CMD ["/build.sh"]
